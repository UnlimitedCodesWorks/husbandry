<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xin.yiliya.dao.OfferServiceMapper">
  <resultMap id="BaseResultMap" type="xin.yiliya.pojo.OfferService">
    <id column="offerserviceid" jdbcType="INTEGER" property="offerserviceid" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="service_name" jdbcType="VARCHAR" property="serviceName" />
    <result column="service_img" jdbcType="VARCHAR" property="serviceImg" />
    <result column="kind" jdbcType="INTEGER" property="kind" />
    <result column="price" jdbcType="VARCHAR" property="price" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="people_phone" jdbcType="VARCHAR" property="peoplePhone" />
    <result column="introduce" jdbcType="LONGVARCHAR" property="introduce" />
    <result column="notice" jdbcType="LONGVARCHAR" property="notice" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    offerserviceid, store_id, service_name, service_img, kind, price, publish_time, update_time, 
    people_phone, introduce, notice, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from offerservice
    where offerserviceid = #{offerserviceid,jdbcType=INTEGER}
  </select>
  <select id="selectIdByName" resultType="_int">

  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from offerservice
    where offerserviceid = #{offerserviceid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="xin.yiliya.pojo.OfferService">
    insert into offerservice (offerserviceid, store_id, service_name, 
      service_img, kind, price, 
      publish_time, update_time, people_phone, introduce, notice,
      status)
    values (#{offerserviceid,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, #{serviceName,jdbcType=VARCHAR}, 
      #{serviceImg,jdbcType=VARCHAR}, #{kind,jdbcType=INTEGER}, #{price,jdbcType=VARCHAR}, 
      #{publishTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{peoplePhone,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, #{notice,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="xin.yiliya.pojo.OfferService">
    insert into offerservice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="offerserviceid != null">
        offerserviceid,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="serviceName != null">
        service_name,
      </if>
      <if test="serviceImg != null">
        service_img,
      </if>
      <if test="kind != null">
        kind,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="peoplePhone != null">
        people_phone,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="notice != null">
        notice,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="offerserviceid != null">
        #{offerserviceid,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="serviceName != null">
        #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="serviceImg != null">
        #{serviceImg,jdbcType=VARCHAR},
      </if>
      <if test="kind != null">
        #{kind,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="peoplePhone != null">
        #{peoplePhone,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="notice != null">
        #{notice,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="xin.yiliya.pojo.OfferService">
    update offerservice
    <set>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="serviceName != null">
        service_name = #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="serviceImg != null">
        service_img = #{serviceImg,jdbcType=VARCHAR},
      </if>
      <if test="kind != null">
        kind = #{kind,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="peoplePhone != null">
        people_phone = #{peoplePhone,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="notice != null">
        notice = #{notice,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where offerserviceid = #{offerserviceid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xin.yiliya.pojo.OfferService">
    update offerservice
    set store_id = #{storeId,jdbcType=INTEGER},
      service_name = #{serviceName,jdbcType=VARCHAR},
      service_img = #{serviceImg,jdbcType=VARCHAR},
      kind = #{kind,jdbcType=INTEGER},
      price = #{price,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      people_phone = #{peoplePhone,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      notice = #{notice,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where offerserviceid = #{offerserviceid,jdbcType=INTEGER}
  </update>
</mapper>